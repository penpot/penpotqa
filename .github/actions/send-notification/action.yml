name: 'Send Mattermost Notification'
description: 'Send test results notification to Mattermost'

inputs:
  browser-name:
    description: 'Browser name for the notification'
    required: true
  channel-id:
    description: 'Mattermost channel ID'
    required: true
  login-id:
    description: 'Mattermost login ID'
    required: true
  password:
    description: 'Mattermost password'
    required: true
  folder-path:
    description: 'Test folder path (optional)'
    required: false
  is-manual-execution:
    description: 'Whether this is a manual execution (true/false)'
    required: false
    default: 'false'
  username:
    description: 'Username for manual execution mention'
    required: false

runs:
  using: 'composite'
  steps:
    - name: Send mattermost Message
      shell: bash
      env:
        CHANNEL_ID: ${{ inputs.channel-id }}
        LOGIN_ID_MATTERMOST: ${{ inputs.login-id }}
        PASSWORD_MATTERMOST: ${{ inputs.password }}
      if: always()
      run: |
        FOLDER_PATH="${{ inputs.folder-path }}"
        IS_MANUAL="${{ inputs.is-manual-execution }}"
        USERNAME="${{ inputs.username }}"

        # Build the command with all parameters
        if [ -n "$FOLDER_PATH" ]; then
          if [ "$IS_MANUAL" = "true" ] && [ -n "$USERNAME" ]; then
            npx ts-node -e "require('./helpers/mattermost.helper.js').sendMessage('${{ inputs.browser-name }}', '$FOLDER_PATH', true, '$USERNAME')"
          else
            npx ts-node -e "require('./helpers/mattermost.helper.js').sendMessage('${{ inputs.browser-name }}', '$FOLDER_PATH', false, null)"
          fi
        else
          if [ "$IS_MANUAL" = "true" ] && [ -n "$USERNAME" ]; then
            npx ts-node -e "require('./helpers/mattermost.helper.js').sendMessage('${{ inputs.browser-name }}', null, true, '$USERNAME')"
          else
            npx ts-node -e "require('./helpers/mattermost.helper.js').sendMessage('${{ inputs.browser-name }}', null, false, null)"
          fi
        fi
