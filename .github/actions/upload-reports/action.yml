name: 'Generate and Upload Reports to S3'
description: 'Upload Playwright reports and update reports index on S3'

inputs:
  browser-name:
    description: 'Browser name for the report'
    required: true
  artifact-name:
    description: 'Name for the artifact upload'
    required: true
  aws-access-key-id:
    description: 'AWS Access Key ID'
    required: true
  aws-secret-access-key:
    description: 'AWS Secret Access Key'
    required: true
  aws-region:
    description: 'AWS Region'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: ${{ inputs.aws-region }}

    - name: Upload report and update index on S3
      shell: bash
      run: |
        # Upload report to S3
        mkdir -p reports/run-${{ github.run_id }}
        cp -r playwright-report/* reports/run-${{ github.run_id }}/
        aws s3 sync reports/run-${{ github.run_id }}/ s3://kaleidos-qa-reports/run-${{ github.run_id }}/
        echo "‚úÖ Report uploaded: http://kaleidos-qa-reports.s3-website.eu-west-1.amazonaws.com/run-${{ github.run_id }}/index.html"

        # Download current index from S3 (if exists)
        aws s3 cp s3://kaleidos-qa-reports/index.html current_index.html 2>/dev/null || echo "No existing index found, creating new one"

        # Calculate metadata
        MONTH=$(date -u +%m)
        if [[ "$MONTH" =~ ^(04|05|06|07|08|09|10)$ ]]; then
          DATE_TIME=$(date -u -d "+2 hours" +"%Y-%m-%d %H:%M CEST")
        else
          DATE_TIME=$(date -u -d "+1 hour" +"%Y-%m-%d %H:%M CET")
        fi
        SHORT_SHA="${{ github.sha }}"
        SHORT_SHA=${SHORT_SHA:0:7}
        BRANCH_NAME="${{ github.ref_name }}"
        WORKFLOW_NAME="${{ github.workflow }}"

        # Success percentage and browser setup
        SUCCESS_PERCENT="N/A"; SUCCESS_CLASS="success-medium"
        if [ -f "testResults.json" ]; then
          SUCCESS_PERCENT=$(node -e "try { console.log(Math.round(JSON.parse(require('fs').readFileSync('testResults.json', 'utf8')).PercentPassed || 0) + '%'); } catch(e) { console.log('N/A'); }")
          if [[ "$SUCCESS_PERCENT" != "N/A" ]]; then
            PERCENT_NUM=${SUCCESS_PERCENT%\%}
            if [[ $PERCENT_NUM -ge 90 ]]; then
              SUCCESS_CLASS="success-high"
            elif [[ $PERCENT_NUM -ge 30 ]]; then
              SUCCESS_CLASS="success-medium"
            else
              SUCCESS_CLASS="success-low"
            fi
          fi
        fi

        [[ "${{ inputs.browser-name }}" = "Firefox" ]] && BROWSER_ICON="ü¶ä" && BROWSER_LABEL="Firefox" || [[ "${{ inputs.browser-name }}" = "Webkit" ]] && { BROWSER_ICON="ü¶é"; BROWSER_LABEL="WebKit"; } || { BROWSER_ICON="üåê"; BROWSER_LABEL="Chrome"; }
        if [[ "$WORKFLOW_NAME" == "Manual Penpot Tests for PR" ]]; then
          WORKFLOW_LABEL="PR_manual"
        elif [[ "$WORKFLOW_NAME" =~ firefox ]] || [[ "$WORKFLOW_NAME" =~ Firefox ]]; then
          WORKFLOW_LABEL="PRE_firefox"
        elif [[ "$WORKFLOW_NAME" =~ webkit ]] || [[ "$WORKFLOW_NAME" =~ Webkit ]]; then
          WORKFLOW_LABEL="PRE_webkit"
        else
          WORKFLOW_LABEL="PRE_chrome_daily"
        fi

        # Generate updated index.html
        {
          sed -n '1,/<!-- ROWS_PLACEHOLDER -->/p' .github/html-template.html | head -n -1
          echo "          <tr>"
          echo "            <td class=\"success-rate $SUCCESS_CLASS\" data-label=\"üìä Success %\">$SUCCESS_PERCENT</td>"
          echo "            <td class=\"workflow\" data-label=\"üîÑ Workflow\">$WORKFLOW_LABEL</td>"
          echo "            <td class=\"commit\" data-label=\"üìù Commit\"><a href=\"https://github.com/${{ github.repository }}/commit/${{ github.sha }}\">$SHORT_SHA</a></td>"
          echo "            <td class=\"date\" data-label=\"üìÖ Date\">$DATE_TIME</td>"
          echo "            <td class=\"branch\" data-label=\"üåø Branch\">$BRANCH_NAME</td>"
          echo "            <td class=\"browser\" data-label=\"üåê Browser\"><span title=\"$BROWSER_LABEL\">$BROWSER_ICON $BROWSER_LABEL</span></td>"
          echo "            <td data-label=\"üìä Report\"><a href=\"http://kaleidos-qa-reports.s3-website.eu-west-1.amazonaws.com/run-${{ github.run_id }}/index.html\">üîç View Report</a></td>"
          echo "          </tr>"
          [ -f current_index.html ] && sed -n '/<tbody>/,/<\/tbody>/p' current_index.html | sed '1d;$d;/<!-- ROWS_PLACEHOLDER -->/d;/^[[:space:]]*$/d' || true
          sed -n '/<!-- ROWS_PLACEHOLDER -->/,$p' .github/html-template.html | tail -n +2
        } > new_index.html

        # Upload updated index to S3 with proper content type and caching
        aws s3 cp new_index.html s3://kaleidos-qa-reports/index.html \
          --content-type "text/html" \
          --cache-control "max-age=300" \
          --metadata-directive REPLACE

        echo "‚úÖ Index updated on S3: http://kaleidos-qa-reports.s3-website.eu-west-1.amazonaws.com/index.html"

        # Cleanup
        rm -f current_index.html new_index.html

    - name: Upload artifact backup
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.artifact-name }}
        path: playwright-report/
        retention-days: 7
        if-no-files-found: ignore
