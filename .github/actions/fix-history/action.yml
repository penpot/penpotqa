name: 'Fix GitHub Pages History'
description: 'Check, reset, or repair the GitHub Pages history for test reports'

inputs:
  action:
    description: 'Action to perform: check, reset, or repair'
    required: true
    default: 'check'

runs:
  using: 'composite'
  steps:
    - name: Checkout gh-pages branch
      uses: actions/checkout@v4
      with:
        ref: gh-pages
        path: gh-pages
        token: ${{ github.token }}

    - name: Check history status
      if: inputs.action == 'check'
      shell: bash
      run: |
        echo "=== GitHub Pages History Status ==="

        if [ -f gh-pages/index.html ]; then
          echo "‚úÖ index.html exists"
          ROW_COUNT=$(grep -c '<tr>' gh-pages/index.html || echo 0)
          DATA_ROWS=$(sed -n '/<tbody>/,/<\/tbody>/p' gh-pages/index.html | grep -c '<tr>' || echo 0)
          echo "üìä Total rows: $ROW_COUNT"
          echo "üìä Data rows: $DATA_ROWS"
          
          if [ -d gh-pages/reports ]; then
            REPORT_COUNT=$(ls -1 gh-pages/reports/ | wc -l)
            echo "üìÅ Report directories: $REPORT_COUNT"
          else
            echo "‚ùå No reports directory found"
          fi
        else
          echo "‚ùå No index.html found"
        fi

    - name: Reset history
      if: inputs.action == 'reset'
      shell: bash
      run: |
        echo "üîÑ Resetting GitHub Pages history..."

        # Create placeholder row
        cat > /tmp/placeholder_row.html << EOF
          <tr>
            <td class="success-rate success-medium" data-label="üìä Success %" colspan="7">
              <em>No test results yet. Run a test workflow to populate this table.</em>
            </td>
          </tr>
        EOF

        # Generate new index.html with placeholder
        awk '
        /<!-- ROWS_PLACEHOLDER -->/ {
          while ((getline line < "/tmp/placeholder_row.html") > 0) {
            print line
          }
          close("/tmp/placeholder_row.html")
          next
        }
        { print }
        ' .github/html-template.html > gh-pages/index.html

        rm -f /tmp/placeholder_row.html

        cd gh-pages
        git config user.name "github-actions"
        git config user.email "github-actions@github.com"
        git add index.html
        git commit -m "Reset GitHub Pages history" || echo "No changes to commit"
        git push origin gh-pages

    - name: Repair history
      if: inputs.action == 'repair'
      shell: bash
      run: |
        echo "üîß Attempting to repair history from existing reports..."

        if [ ! -d gh-pages/reports ]; then
          echo "‚ùå No reports directory found. Cannot repair history."
          exit 1
        fi

        # Generate rows from existing reports (newest first)
        > /tmp/all_rows.html
        for report_dir in $(ls -dt gh-pages/reports/run-* 2>/dev/null | head -50); do
          RUN_ID=$(basename "$report_dir" | sed 's/run-//')
          
          # Try to extract info from report or use defaults
          DATE_TIME=$(stat -c %y "$report_dir" 2>/dev/null | cut -d' ' -f1,2 | sed 's/ / /' || echo "Unknown")
          
          cat >> /tmp/all_rows.html << EOF
          <tr>
            <td class="success-rate success-medium" data-label="üìä Success %">N/A</td>
            <td class="workflow" data-label="üîÑ Workflow">Recovered</td>
            <td class="commit" data-label="üìù Commit">N/A</td>
            <td class="date" data-label="üìÖ Date">$DATE_TIME</td>
            <td class="branch" data-label="üåø Branch">N/A</td>
            <td class="browser" data-label="üåê Browser">üåê Chrome</td>
            <td data-label="üìä Report"><a href="reports/run-$RUN_ID/index.html">üîç View Report</a></td>
          </tr>
        EOF
        done

        if [ -s /tmp/all_rows.html ]; then
          # Generate new index.html with recovered rows
          awk '
          /<!-- ROWS_PLACEHOLDER -->/ {
            while ((getline line < "/tmp/all_rows.html") > 0) {
              print line
            }
            close("/tmp/all_rows.html")
            next
          }
          { print }
          ' .github/html-template.html > gh-pages/index.html
          
          RECOVERED_COUNT=$(grep -c '<tr>' /tmp/all_rows.html)
          echo "‚úÖ Repaired history with $RECOVERED_COUNT entries"
        else
          echo "‚ùå No reports found to repair from"
          exit 1
        fi

        rm -f /tmp/all_rows.html

        cd gh-pages
        git config user.name "github-actions"
        git config user.email "github-actions@github.com"
        git add index.html
        git commit -m "Repair GitHub Pages history from existing reports" || echo "No changes to commit"
        git push origin gh-pages
